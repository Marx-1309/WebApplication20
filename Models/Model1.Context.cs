//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication20.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PMISEntities : DbContext
    {
        public PMISEntities()
            : base("name=PMISEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<App_AcknowledgementData> App_AcknowledgementData { get; set; }
        public virtual DbSet<App_Acknowledgment> App_Acknowledgment { get; set; }
        public virtual DbSet<App_Allocation> App_Allocation { get; set; }
        public virtual DbSet<App_AllocationData> App_AllocationData { get; set; }
        public virtual DbSet<App_Applicant> App_Applicant { get; set; }
        public virtual DbSet<App_ApplicantStatus> App_ApplicantStatus { get; set; }
        public virtual DbSet<App_AttachmentDocument> App_AttachmentDocument { get; set; }
        public virtual DbSet<App_Erf> App_Erf { get; set; }
        public virtual DbSet<App_ExistingOwnership> App_ExistingOwnership { get; set; }
        public virtual DbSet<App_Financial> App_Financial { get; set; }
        public virtual DbSet<App_WaitingList> App_WaitingList { get; set; }
        public virtual DbSet<SMSContent> SMSContents { get; set; }
        public virtual DbSet<SmsData> SmsDatas { get; set; }
        public virtual DbSet<SmsInstance> SmsInstances { get; set; }
        public virtual DbSet<SmsType> SmsTypes { get; set; }
        public virtual DbSet<Sys_ApplicationStatus> Sys_ApplicationStatus { get; set; }
        public virtual DbSet<Sys_AttachmentDocumentType> Sys_AttachmentDocumentType { get; set; }
        public virtual DbSet<Sys_ErfArea> Sys_ErfArea { get; set; }
        public virtual DbSet<Sys_ErfCost> Sys_ErfCost { get; set; }
        public virtual DbSet<Sys_ErfSize> Sys_ErfSize { get; set; }
        public virtual DbSet<Sys_ErfTownship> Sys_ErfTownship { get; set; }
        public virtual DbSet<Sys_ErfZoning> Sys_ErfZoning { get; set; }
        public virtual DbSet<Sys_Month> Sys_Month { get; set; }
        public virtual DbSet<Sys_PaymentMethod> Sys_PaymentMethod { get; set; }
        public virtual DbSet<Sys_PlotType> Sys_PlotType { get; set; }
        public virtual DbSet<Sys_Roles> Sys_Roles { get; set; }
        public virtual DbSet<Sys_User> Sys_User { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Sys_Photo> Sys_Photo { get; set; }
        public virtual DbSet<App_ApplicantList> App_ApplicantList { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
    
        public virtual ObjectResult<aa_Report_AcknowledgementLetterAll_Result> aa_Report_AcknowledgementLetterAll(Nullable<long> acknowledgmentID)
        {
            var acknowledgmentIDParameter = acknowledgmentID.HasValue ?
                new ObjectParameter("AcknowledgmentID", acknowledgmentID) :
                new ObjectParameter("AcknowledgmentID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aa_Report_AcknowledgementLetterAll_Result>("aa_Report_AcknowledgementLetterAll", acknowledgmentIDParameter);
        }
    
        public virtual ObjectResult<aa_Report_AcknowledgementLetterApplicant_Result> aa_Report_AcknowledgementLetterApplicant(Nullable<long> acknowledgmentDataID)
        {
            var acknowledgmentDataIDParameter = acknowledgmentDataID.HasValue ?
                new ObjectParameter("AcknowledgmentDataID", acknowledgmentDataID) :
                new ObjectParameter("AcknowledgmentDataID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aa_Report_AcknowledgementLetterApplicant_Result>("aa_Report_AcknowledgementLetterApplicant", acknowledgmentDataIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
